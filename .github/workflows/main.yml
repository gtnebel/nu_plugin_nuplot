name: Build and deploy

# Build on every push (not needed)
# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# Build, if a tag with a version number was created
on:
  create:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    # Build for all combinations of `goos` and `goarch`
    strategy:
      matrix:
        goos: [linux, darwin, windows, freebsd]
        goarch: [amd64, arm64]
        # Exclude unsupported combinations if needed
        # exclude:
        #   - goos: windows
        #     goarch: arm64  # Windows ARM64 may not be needed or supported

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Build for ${{ matrix.goos }}/${{ matrix.goarch }}
        run: |
          GOOS=${{ matrix.goos }} \
          GOARCH=${{ matrix.goarch }} \
          go build -o build/${{ github.event.repository.name }}${{ matrix.goos == 'windows' && '.exe' || '' }}
        env:
          CGO_ENABLED: 0

      - name: Copy Readme and License files
        run: |
          cp README.md build
          cp LICENSE build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/
